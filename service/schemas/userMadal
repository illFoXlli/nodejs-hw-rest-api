const mongoose = require('mongoose');
const { Schema } = mongoose;
const bcrypt = require("bcryptjs");
require('dotenv').config();

const userSchema = new Schema({
    name: {
        type: String,
        default: "Guest",
      },
    password: {
      type: String,
      required: [true, 'Password is required'],
    },
    email: {
      type: String,
      required: [true, 'Email is required'],
      unique: true,
    },
    subscription: {
      type: String,
      enum: ["starter", "pro", "business"],
      default: "starter"
    },
    token: {
      type: String,
      default: null,
    },
  })


//   userSchema.methods.setPassword =  function (password) {
//    this.password = bcrypt.hashSync(password, bcrypt.genSaltSync(process.env.SALT_FACTOR)) 
//   };
  
  userSchema.methods.isValidPassword = async function (password) {
    return bcrypt.compare(password, this.password);
  };


  const Users = mongoose.model(
    'users',
    userSchema
  );


  module.exports = {
    Users,
  };
  